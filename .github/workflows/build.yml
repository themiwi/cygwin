name: CI

on:
  push:
    branches: [ master, feature/** ]
  pull_request:
    branches: [ master ]

jobs:
  python-bcrypt:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    #- name: Cache Cygwin
    #  uses: actions/cache@v2
    #  env:
    #    cache-name: cache-cygwin-install
    #  with:
    #    path: C:/Cygwin64
    #    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cygport') }}
    #    restore-keys: |
    #      ${{ runner.os }}-build-${{ env.cache-name }}-
    #      ${{ runner.os }}-build-
    #      ${{ runner.os }}-

    - name: Install Cygwin
      run: choco install -y cygwin --params "/InstallDir:C:\Cygwin64 /NoStartMenu"

    - name: Install Cygwin packages
      run: |
        $cygpackages = @( 'cygport', 'git',
          'python', 'python-devel',
          'python3', 'python3-devel',
          'python37', 'python37-pip', 'python37-devel', 'python37-wheel',
          'python38', 'python38-pip', 'python38-devel', 'python38-wheel',
          'python-pip-wheel', 'python-setuptools-wheel',
          'libffi-devel'
          )
        C:\Cygwin64\cygwinsetup.exe -v -W -n -q -g -P ($cygpackages -join ',')
        Wait-Process -Name cygwinsetup

    - name: Build
      run: |
        C:\Cygwin64\bin\bash.exe --norc --noprofile ${{ github.Workspace }}\build.sh python-bcrypt/python-bcrypt.cygport fetch all

    - name: List workspace content
      run: |
        Get-ChildItem -Recurse -Name -File -Path ${{ github.Workspace }}\python-bcrypt\

  python-nacl:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    #- name: Cache Cygwin
    #  uses: actions/cache@v2
    #  env:
    #    cache-name: cache-cygwin-install
    #  with:
    #    path: C:/Cygwin64
    #    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cygport') }}
    #    restore-keys: |
    #      ${{ runner.os }}-build-${{ env.cache-name }}-
    #      ${{ runner.os }}-build-
    #      ${{ runner.os }}-

    - name: Install Cygwin
      run: choco install -y cygwin --params "/InstallDir:C:\Cygwin64 /NoStartMenu"

    - name: Install Cygwin packages
      run: |
        $cygpackages = @( 'cygport', 'git',
          'python', 'python-devel',
          'python3', 'python3-devel',
          'python37', 'python37-pip', 'python37-devel', 'python37-wheel',
          'python38', 'python38-pip', 'python38-devel', 'python38-wheel',
          'python-pip-wheel', 'python-setuptools-wheel',
          'libffi-devel', 'libsodium-devel'
          )
        C:\Cygwin64\cygwinsetup.exe -v -W -n -q -g -P ($cygpackages -join ',')
        Wait-Process -Name cygwinsetup

    - uses: actions/checkout@v2

    - name: Build
      run: |
        C:\Cygwin64\bin\bash.exe --norc --noprofile ${{ github.Workspace }}\build.sh python-nacl/python-nacl.cygport fetch all

    - name: List workspace content
      run: |
        Get-ChildItem -Recurse -Name -File -Path ${{ github.Workspace }}\python-nacl\

  python-paramiko:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    #- name: Cache Cygwin
    #  uses: actions/cache@v2
    #  env:
    #    cache-name: cache-cygwin-install
    #  with:
    #    path: C:/Cygwin64
    #    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cygport') }}
    #    restore-keys: |
    #      ${{ runner.os }}-build-${{ env.cache-name }}-
    #      ${{ runner.os }}-build-
    #      ${{ runner.os }}-

    - name: Install Cygwin
      run: choco install -y cygwin --params "/InstallDir:C:\Cygwin64 /NoStartMenu"

    - name: Install Cygwin packages
      run: |
        $cygpackages = @( 'cygport', 'git',
          'python', 'python-devel',
          'python3', 'python3-devel',
          'python37', 'python37-pip', 'python37-devel', 'python37-wheel',
          'python38', 'python38-pip', 'python38-devel', 'python38-wheel',
          'python-pip-wheel', 'python-setuptools-wheel'
          )
        C:\Cygwin64\cygwinsetup.exe -v -W -n -q -g -P ($cygpackages -join ',')
        Wait-Process -Name cygwinsetup

    - name: Build
      run: |
        C:\Cygwin64\bin\bash.exe --norc --noprofile ${{ github.Workspace }}\build.sh python-paramiko/python-paramiko.cygport fetch all

    - name: List workspace content
      run: |
        Get-ChildItem -Recurse -Name -File -Path ${{ github.Workspace }}\python-paramiko\

  ssh-pageant:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    #- name: Cache Cygwin
    #  uses: actions/cache@v2
    #  env:
    #    cache-name: cache-cygwin-install
    #  with:
    #    path: C:/Cygwin64
    #    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cygport') }}
    #    restore-keys: |
    #      ${{ runner.os }}-build-${{ env.cache-name }}-
    #      ${{ runner.os }}-build-
    #      ${{ runner.os }}-

    - name: Install Cygwin
      run: choco install -y cygwin --params "/InstallDir:C:\Cygwin64 /NoStartMenu"

    - name: Install Cygwin packages
      run: |
        $cygpackages = @( 'cygport', 'git', 'make' )
        C:\Cygwin64\cygwinsetup.exe -v -W -n -q -g -P ($cygpackages -join ',')
        Wait-Process -Name cygwinsetup

    - name: Build
      run: |
        C:\Cygwin64\bin\bash.exe --norc --noprofile ${{ github.Workspace }}\build.sh ssh-pageant/ssh-pageant.cygport fetch all

    - uses: actions/upload-artifact@v2
      with:
        name: ssh-pageant
        path: ssh-pageant/ssh-pageant-*.x86_64/dist/ssh-pageant/

  tmux:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    #- name: Cache Cygwin
    #  uses: actions/cache@v2
    #  env:
    #    cache-name: cache-cygwin-install
    #  with:
    #    path: C:/Cygwin64
    #    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cygport') }}
    #    restore-keys: |
    #      ${{ runner.os }}-build-${{ env.cache-name }}-
    #      ${{ runner.os }}-build-
    #      ${{ runner.os }}-

    - name: Install Cygwin
      run: choco install -y cygwin --params "/InstallDir:C:\Cygwin64 /NoStartMenu"

    - name: Install Cygwin packages
      run: |
        $cygpackages = @( 'cygport', 'git',
          'autoconf', 'automake', 'gettext-devel',
          'libevent-devel', 'libtool', 'libncurses-devel',
          'make', 'pkg-config'
          )
        C:\Cygwin64\cygwinsetup.exe -v -W -n -q -g -P ($cygpackages -join ',')
        Wait-Process -Name cygwinsetup

    - name: Build
      run: |
        C:\Cygwin64\bin\bash.exe --norc --noprofile ${{ github.Workspace }}\build.sh tmux/tmux.cygport fetch all

    - uses: actions/upload-artifact@v2
      with:
        name: tmux
        path: tmux/tmux-*.x86_64/dist/tmux/
